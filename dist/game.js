(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["RansomHeroes"] = factory();
	else
		root["RansomHeroes"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/RHGame.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./images sync recursive ^\\.\\/.*\\/sprite\\.json$":
/*!********************************************!*\
  !*** ./images sync ^\.\/.*\/sprite\.json$ ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./silversamurai/sprite.json\": \"./images/silversamurai/sprite.json\",\n\t\"./zangief/sprite.json\": \"./images/zangief/sprite.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./images sync recursive ^\\\\.\\\\/.*\\\\/sprite\\\\.json$\";\n\n//# sourceURL=webpack://RansomHeroes/./images_sync_^\\.\\/.*\\/sprite\\.json$?");

/***/ }),

/***/ "./images/silversamurai/sprite.json":
/*!******************************************!*\
  !*** ./images/silversamurai/sprite.json ***!
  \******************************************/
/*! exports provided: idle, default */
/***/ (function(module) {

eval("module.exports = {\"idle\":{\"start\":102,\"end\":116,\"axis\":{\"x\":400,\"y\":400},\"prefix\":\"Silver Samurai_\",\"suffix\":\".png\",\"pad0\":4}};\n\n//# sourceURL=webpack://RansomHeroes/./images/silversamurai/sprite.json?");

/***/ }),

/***/ "./images/zangief/sprite.json":
/*!************************************!*\
  !*** ./images/zangief/sprite.json ***!
  \************************************/
/*! exports provided: idle, default */
/***/ (function(module) {

eval("module.exports = {\"idle\":{\"start\":2,\"end\":7,\"axis\":{\"x\":400,\"y\":400},\"prefix\":\"Zangief_\",\"suffix\":\".png\",\"pad0\":4}};\n\n//# sourceURL=webpack://RansomHeroes/./images/zangief/sprite.json?");

/***/ }),

/***/ "./js/Canvas.js":
/*!**********************!*\
  !*** ./js/Canvas.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Canvas = function () {\n  function Canvas(htmlCanvas) {\n    this._htmlCanvas = htmlCanvas;\n    this._context = htmlCanvas.getContext(\"2d\");\n  }\n\n  Object.defineProperty(Canvas.prototype, \"context\", {\n    get: function () {\n      return this._context;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;\n\n//# sourceURL=webpack://RansomHeroes/./js/Canvas.js?");

/***/ }),

/***/ "./js/Entity.js":
/*!**********************!*\
  !*** ./js/Entity.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Entity = function () {\n  function Entity(entityID, x, y) {\n    this._entityID = entityID;\n    this._state = \"idle\";\n    this._x = x;\n    this._y = y;\n  }\n\n  Object.defineProperty(Entity.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Entity.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Entity.prototype, \"entityID\", {\n    get: function () {\n      return this._entityID;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Entity.prototype, \"state\", {\n    get: function () {\n      return this._state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Entity.prototype.update = function (time) {\n    return true;\n  };\n\n  return Entity;\n}();\n\nexports.Entity = Entity;\n\n//# sourceURL=webpack://RansomHeroes/./js/Entity.js?");

/***/ }),

/***/ "./js/RHGame.js":
/*!**********************!*\
  !*** ./js/RHGame.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar RHView_1 = __webpack_require__(/*! ./RHView */ \"./js/RHView.js\");\n\nvar RHModel_1 = __webpack_require__(/*! ./RHModel */ \"./js/RHModel.js\");\n\nvar Canvas_1 = __webpack_require__(/*! ./Canvas */ \"./js/Canvas.js\");\n\nvar Entity_1 = __webpack_require__(/*! ./Entity */ \"./js/Entity.js\");\n\nvar RHGame = function () {\n  function RHGame(canvas) {\n    this._model = new RHModel_1.RHModel();\n    this._view = new RHView_1.RHView(canvas);\n    var entities = [\"silversamurai\", \"zangief\"];\n    var states = [\"idle\"];\n\n    for (var _i = 0, entities_1 = entities; _i < entities_1.length; _i++) {\n      var entity = entities_1[_i];\n      var randX = Math.floor(Math.random() * 200) + 50;\n      var randY = Math.floor(Math.random() * 200) + 50;\n      var curEntity = new Entity_1.Entity(entity, randX, randY);\n\n      this._model.addEntity(curEntity);\n\n      for (var _a = 0, states_1 = states; _a < states_1.length; _a++) {\n        var state = states_1[_a];\n\n        this._view.addEntityView(entity, state);\n      }\n    }\n  }\n\n  RHGame.prototype.run = function () {\n    var _this = this;\n\n    this._model.update();\n\n    this._view.draw(this._model);\n\n    window.requestAnimationFrame(function () {\n      return _this.run();\n    });\n  };\n\n  return RHGame;\n}();\n\nexports.RHGame = RHGame;\nvar canvas = new Canvas_1.Canvas(document.getElementsByTagName(\"canvas\")[0]);\nvar game = new RHGame(canvas);\nvar animationFrame = window.requestAnimationFrame(function () {\n  return game.run();\n});\n\n//# sourceURL=webpack://RansomHeroes/./js/RHGame.js?");

/***/ }),

/***/ "./js/RHModel.js":
/*!***********************!*\
  !*** ./js/RHModel.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar RHModel = function () {\n  function RHModel() {\n    this._time = 0;\n    this._entities = new Array();\n  }\n\n  Object.defineProperty(RHModel.prototype, \"entities\", {\n    get: function () {\n      return this._entities.slice();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  RHModel.prototype.addEntity = function (entity) {\n    this._entities.push(entity);\n  };\n\n  RHModel.prototype.update = function () {\n    this._time += 1;\n\n    for (var _i = 0, _a = this._entities; _i < _a.length; _i++) {\n      var entity = _a[_i];\n      entity.update(this._time);\n    }\n  };\n\n  return RHModel;\n}();\n\nexports.RHModel = RHModel;\n\n//# sourceURL=webpack://RansomHeroes/./js/RHModel.js?");

/***/ }),

/***/ "./js/RHView.js":
/*!**********************!*\
  !*** ./js/RHView.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Sprite_1 = __webpack_require__(/*! ./Sprite */ \"./js/Sprite.js\");\n\nvar SpritePathService_1 = __webpack_require__(/*! ./services/SpritePathService */ \"./js/services/SpritePathService.js\");\n\nvar RHView = function () {\n  function RHView(canvas) {\n    this._canvas = canvas;\n    this._entitySprites = new Map();\n  }\n\n  RHView.prototype.addEntityView = function (entityID, state) {\n    var spritePathService = new SpritePathService_1.SpritePathService();\n    var options = new Sprite_1.SpriteOptions();\n    options.imagePaths = spritePathService.getStateSpritePaths(entityID, state);\n    var sprite = new Sprite_1.Sprite(options);\n\n    if (!this._entitySprites.has(entityID)) {\n      this._entitySprites.set(entityID, new Map());\n    }\n\n    this._entitySprites.get(entityID).set(state, sprite);\n  };\n\n  RHView.prototype.drawEntity = function (entity) {\n    var sprite = this._entitySprites.get(entity.entityID).get(entity.state);\n\n    sprite.update();\n    sprite.render(this._canvas.context, entity.x, entity.y);\n  };\n\n  RHView.prototype.draw = function (model) {\n    this._canvas.context.clearRect(0, 0, this._canvas.context.canvas.width, this._canvas.context.canvas.height);\n\n    for (var _i = 0, _a = model.entities; _i < _a.length; _i++) {\n      var entity = _a[_i];\n      this.drawEntity(entity);\n    }\n  };\n\n  return RHView;\n}();\n\nexports.RHView = RHView;\n\n//# sourceURL=webpack://RansomHeroes/./js/RHView.js?");

/***/ }),

/***/ "./js/Sprite.js":
/*!**********************!*\
  !*** ./js/Sprite.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SpriteOptions = function () {\n  function SpriteOptions() {}\n\n  return SpriteOptions;\n}();\n\nexports.SpriteOptions = SpriteOptions;\n\nvar Sprite = function () {\n  function Sprite(options) {\n    this._images = new Array();\n    this.loadImages(options.imagePaths);\n    this._width = 60;\n    this._height = 60;\n    this._frameIndex = 0;\n    this._tickCount = 0;\n    this._ticksPerFrame = 6;\n    this._loops = true;\n  }\n\n  Sprite.prototype.loadImages = function (imagePaths) {\n    for (var _i = 0, imagePaths_1 = imagePaths; _i < imagePaths_1.length; _i++) {\n      var imagePath = imagePaths_1[_i];\n      var image = new Image();\n      image.src = imagePath;\n\n      this._images.push(image);\n    }\n  };\n\n  Sprite.prototype.update = function () {\n    this._tickCount++;\n\n    if (this._tickCount > this._ticksPerFrame) {\n      this._tickCount = 0;\n\n      if (this._frameIndex < this._images.length - 1) {\n        this._frameIndex += 1;\n      } else if (this._loops) {\n        this._frameIndex = 0;\n      }\n    }\n  };\n\n  Sprite.prototype.render = function (context, x, y) {\n    context.drawImage(this._images[this._frameIndex], x, y);\n  };\n\n  ;\n  return Sprite;\n}();\n\nexports.Sprite = Sprite;\n\n//# sourceURL=webpack://RansomHeroes/./js/Sprite.js?");

/***/ }),

/***/ "./js/services/SpritePathService.js":
/*!******************************************!*\
  !*** ./js/services/SpritePathService.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar json2typescript_1 = __webpack_require__(/*! json2typescript */ \"./node_modules/json2typescript/index.js\");\n\nvar spriteConfigs;\nvar entityIDs = [\"zangief\", \"silversamurai\"];\n\nvar Coordinate = function () {\n  function Coordinate() {}\n\n  __decorate([json2typescript_1.JsonProperty(\"x\", Number), __metadata(\"design:type\", Number)], Coordinate.prototype, \"x\", void 0);\n\n  __decorate([json2typescript_1.JsonProperty(\"y\", Number), __metadata(\"design:type\", Number)], Coordinate.prototype, \"y\", void 0);\n\n  Coordinate = __decorate([json2typescript_1.JsonObject(\"Coordinate\")], Coordinate);\n  return Coordinate;\n}();\n\nvar StateSpriteFrameData = function () {\n  function StateSpriteFrameData() {\n    this.start = null;\n    this.end = null;\n    this.axis = null;\n    this.prefix = null;\n    this.suffix = null;\n    this.pad0 = null;\n  }\n\n  __decorate([json2typescript_1.JsonProperty(\"start\", Number), __metadata(\"design:type\", Number)], StateSpriteFrameData.prototype, \"start\", void 0);\n\n  __decorate([json2typescript_1.JsonProperty(\"end\", Number), __metadata(\"design:type\", Number)], StateSpriteFrameData.prototype, \"end\", void 0);\n\n  __decorate([json2typescript_1.JsonProperty(\"axis\", Coordinate), __metadata(\"design:type\", Coordinate)], StateSpriteFrameData.prototype, \"axis\", void 0);\n\n  __decorate([json2typescript_1.JsonProperty(\"prefix\", String), __metadata(\"design:type\", String)], StateSpriteFrameData.prototype, \"prefix\", void 0);\n\n  __decorate([json2typescript_1.JsonProperty(\"suffix\", String), __metadata(\"design:type\", String)], StateSpriteFrameData.prototype, \"suffix\", void 0);\n\n  __decorate([json2typescript_1.JsonProperty(\"pad0\", Number), __metadata(\"design:type\", Number)], StateSpriteFrameData.prototype, \"pad0\", void 0);\n\n  StateSpriteFrameData = __decorate([json2typescript_1.JsonObject(\"StateSpriteFrameData\")], StateSpriteFrameData);\n  return StateSpriteFrameData;\n}();\n\nvar EntitySpriteFrameData = function () {\n  function EntitySpriteFrameData() {}\n\n  EntitySpriteFrameData = __decorate([json2typescript_1.JsonObject(\"EntitySpriteFrameData\")], EntitySpriteFrameData);\n  return EntitySpriteFrameData;\n}();\n\nspriteConfigs = {};\n\nfor (var _i = 0, entityIDs_1 = entityIDs; _i < entityIDs_1.length; _i++) {\n  var entityID = entityIDs_1[_i];\n  spriteConfigs[entityID] = __webpack_require__(\"./images sync recursive ^\\\\.\\\\/.*\\\\/sprite\\\\.json$\")(\"./\" + entityID + \"/sprite.json\");\n}\n\nvar SpritePathService = function () {\n  function SpritePathService() {\n    this._entityInfo = spriteConfigs;\n  }\n\n  SpritePathService.prototype.getEntitySpritePaths = function (entityID) {\n    return this._entityInfo[entityID];\n  };\n\n  SpritePathService.prototype.getStateSpritePaths = function (entityID, state) {\n    var jsonConvert = new json2typescript_1.JsonConvert();\n    var stateInfo = jsonConvert.deserializeObject(this.getEntitySpritePaths(entityID)[state], StateSpriteFrameData);\n    var paths = new Array();\n\n    for (var i = stateInfo.start; i <= stateInfo.end; i++) {\n      paths.push(\"images/\" + entityID + \"/\" + (stateInfo.prefix + i.toString().padStart(stateInfo.pad0, '0') + stateInfo.suffix));\n    }\n\n    return paths;\n  };\n\n  return SpritePathService;\n}();\n\nexports.SpritePathService = SpritePathService;\n\n//# sourceURL=webpack://RansomHeroes/./js/services/SpritePathService.js?");

/***/ }),

/***/ "./node_modules/json2typescript/index.js":
/*!***********************************************!*\
  !*** ./node_modules/json2typescript/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_convert_1 = __webpack_require__(/*! ./src/json2typescript/json-convert */ \"./node_modules/json2typescript/src/json2typescript/json-convert.js\");\nexports.JsonConvert = json_convert_1.JsonConvert;\nvar json_convert_enums_1 = __webpack_require__(/*! ./src/json2typescript/json-convert-enums */ \"./node_modules/json2typescript/src/json2typescript/json-convert-enums.js\");\nexports.ValueCheckingMode = json_convert_enums_1.ValueCheckingMode;\nexports.OperationMode = json_convert_enums_1.OperationMode;\nvar json_convert_decorators_1 = __webpack_require__(/*! ./src/json2typescript/json-convert-decorators */ \"./node_modules/json2typescript/src/json2typescript/json-convert-decorators.js\");\nexports.JsonObject = json_convert_decorators_1.JsonObject;\nexports.JsonProperty = json_convert_decorators_1.JsonProperty;\nexports.JsonConverter = json_convert_decorators_1.JsonConverter;\nvar any_1 = __webpack_require__(/*! ./src/json2typescript/any */ \"./node_modules/json2typescript/src/json2typescript/any.js\");\nexports.Any = any_1.Any;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://RansomHeroes/./node_modules/json2typescript/index.js?");

/***/ }),

/***/ "./node_modules/json2typescript/src/json2typescript/any.js":
/*!*****************************************************************!*\
  !*** ./node_modules/json2typescript/src/json2typescript/any.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Virtual any type for the property decorator.\n */\nvar Any = /** @class */ (function () {\n    function Any() {\n    }\n    return Any;\n}());\nexports.Any = Any;\n//# sourceMappingURL=any.js.map\n\n//# sourceURL=webpack://RansomHeroes/./node_modules/json2typescript/src/json2typescript/any.js?");

/***/ }),

/***/ "./node_modules/json2typescript/src/json2typescript/json-convert-decorators.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/json2typescript/src/json2typescript/json-convert-decorators.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_convert_options_1 = __webpack_require__(/*! ./json-convert-options */ \"./node_modules/json2typescript/src/json2typescript/json-convert-options.js\");\nvar any_1 = __webpack_require__(/*! ./any */ \"./node_modules/json2typescript/src/json2typescript/any.js\");\n/**\n * Decorator of a class that is a custom converter.\n *\n * @param target the class\n */\nfunction JsonConverter(target) {\n    target[json_convert_options_1.Settings.MAPPER_PROPERTY] = \"\";\n}\nexports.JsonConverter = JsonConverter;\n/**\n * Decorator of a class that comes from a JSON object.\n *\n * @param target the class identifier or the class\n *\n * @returns {any}\n *\n * @throws Error\n */\nfunction JsonObject(target) {\n    // target is the constructor or the custom class name\n    var classIdentifier = \"\";\n    var decorator = function (target) {\n        target.prototype[json_convert_options_1.Settings.CLASS_IDENTIFIER] = classIdentifier.length > 0 ? classIdentifier : target.name;\n        var mapping = target.prototype[json_convert_options_1.Settings.MAPPING_PROPERTY];\n        var newMapping = [];\n        // Make sure we replace the mapping names of all properties of this class\n        if (!mapping)\n            return;\n        for (var _i = 0, _a = Object.keys(mapping); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var newKey = key.replace(json_convert_options_1.Settings.CLASS_IDENTIFIER + \".\", target.prototype[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \".\");\n            newMapping[newKey] = mapping[key];\n        }\n        target.prototype[json_convert_options_1.Settings.MAPPING_PROPERTY] = newMapping;\n    };\n    var type = typeof target;\n    switch (type) {\n        // Decorator was @JsonObject(classId)\n        case \"string\":\n            classIdentifier = target;\n            return decorator;\n        // Decorator was @JsonObject\n        case \"function\":\n            decorator(target);\n            return;\n        // Decorator was @JsonObject()\n        case \"undefined\":\n            return decorator;\n        // Decorator was @JsonObject(123)\n        default:\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"It's mandatory to pass a string as parameter in the @JsonObject decorator.\\n\\n\" +\n                \"Use either @JsonObject or @JsonObject(classId) where classId is a string.\\n\\n\");\n    }\n}\nexports.JsonObject = JsonObject;\n/**\n * Decorator of a class property that comes from a JSON object.\n *\n * The second param can be either a type or a class of a custom converter.\n *\n * Use the following notation for the type:\n * - Primitive type: String|Number|Boolean\n * - Custom type: YourClassName\n * - Array type: [String|Number|Boolean|YourClassName]\n *\n * If you decide to use a custom converter, make sure this class implements the interface JsonCustomConvert from this package.\n *\n * @param jsonPropertyName optional param (default: classPropertyName) the property name in the expected JSON object\n * @param conversionOption optional param (default: Any), should be either the expected type (String|Boolean|Number|etc) or a custom converter class implementing JsonCustomConvert\n * @param isOptional optional param (default: false), if true, the json property does not have to be present in the object\n *\n * @returns {(target:any, classPropertyName:string)=>void}\n *\n * @throws Error\n */\nfunction JsonProperty() {\n    var params = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        params[_i] = arguments[_i];\n    }\n    return function (target, classPropertyName) {\n        // target is the class\n        var jsonPropertyName = classPropertyName;\n        var conversionOption = any_1.Any;\n        var isOptional = false;\n        switch (params.length) {\n            case 1:\n                if (params[0] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It's not allowed to explicitly pass \\\"undefined\\\" as first parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Leave the decorator parameters empty if you do not wish to pass the first parameter.\\n\\n\");\n                jsonPropertyName = params[0];\n                break;\n            case 2:\n                if (params[0] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It's not allowed to explicitly pass \\\"undefined\\\" as first parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Leave the decorator parameters empty if you do not wish to pass the first parameter.\\n\\n\");\n                if (params[1] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It's not allowed to explicitly pass \\\"undefined\\\" as second parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Use \\\"Any\\\" to allow any type. You can import this class from \\\"json2typescript\\\".\\n\\n\");\n                jsonPropertyName = params[0];\n                conversionOption = params[1];\n                break;\n            case 3:\n                if (params[0] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It's not allowed to explicitly pass \\\"undefined\\\" as first parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Leave the decorator parameters empty if you do not wish to pass the first parameter.\\n\\n\");\n                if (params[1] === undefined)\n                    throw new Error(\"Fatal error in JsonConvert. \" +\n                        \"It's not allowed to explicitly pass \\\"undefined\\\" as second parameter in the @JsonProperty decorator.\\n\\n\" +\n                        \"\\tClass property: \\n\" +\n                        \"\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                        \"Use \\\"Any\\\" to allow any type. You can import this class from \\\"json2typescript\\\".\\n\\n\");\n                jsonPropertyName = params[0];\n                conversionOption = params[1];\n                isOptional = params[2];\n                break;\n            default:\n                break;\n        }\n        if (typeof (target[json_convert_options_1.Settings.MAPPING_PROPERTY]) === \"undefined\") {\n            target[json_convert_options_1.Settings.MAPPING_PROPERTY] = [];\n        }\n        var jsonPropertyMappingOptions = new json_convert_options_1.MappingOptions();\n        jsonPropertyMappingOptions.classPropertyName = classPropertyName;\n        jsonPropertyMappingOptions.jsonPropertyName = jsonPropertyName;\n        jsonPropertyMappingOptions.isOptional = isOptional ? isOptional : false;\n        // Check if conversionOption is a type or a custom converter.\n        if (typeof (conversionOption) !== \"undefined\" && conversionOption !== null && typeof (conversionOption[json_convert_options_1.Settings.MAPPER_PROPERTY]) !== \"undefined\") {\n            jsonPropertyMappingOptions.customConverter = new conversionOption();\n        }\n        else {\n            jsonPropertyMappingOptions.expectedJsonType = conversionOption;\n        }\n        // Save the mapping info\n        target[json_convert_options_1.Settings.MAPPING_PROPERTY][json_convert_options_1.Settings.CLASS_IDENTIFIER + \".\" + classPropertyName] = jsonPropertyMappingOptions;\n    };\n}\nexports.JsonProperty = JsonProperty;\n//# sourceMappingURL=json-convert-decorators.js.map\n\n//# sourceURL=webpack://RansomHeroes/./node_modules/json2typescript/src/json2typescript/json-convert-decorators.js?");

/***/ }),

/***/ "./node_modules/json2typescript/src/json2typescript/json-convert-enums.js":
/*!********************************************************************************!*\
  !*** ./node_modules/json2typescript/src/json2typescript/json-convert-enums.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for the operation mode of a JsonConvert instance.\n *\n * The values should be used as follows:\n * - DISABLE: json2typescript will be disabled, no type checking or mapping is done\n * - ENABLE: json2typescript is enabled, but only errors are logged\n * - LOGGING: json2typescript is enabled and detailed information is logged\n *\n * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n * @see https://www.npmjs.com/package/json2typescript full documentation\n */\nvar OperationMode;\n(function (OperationMode) {\n    OperationMode[OperationMode[\"DISABLE\"] = 0] = \"DISABLE\";\n    OperationMode[OperationMode[\"ENABLE\"] = 1] = \"ENABLE\";\n    OperationMode[OperationMode[\"LOGGING\"] = 2] = \"LOGGING\";\n})(OperationMode = exports.OperationMode || (exports.OperationMode = {}));\n;\n/**\n * Enum for the value checking mode of a JsonConvert instance.\n *\n * The values should be used as follows:\n * - ALLOW_NULL: all given values in the JSON are allowed to be null\n * - ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n * - DISALLOW_NULL: no null values are tolerated in the JSON\n *\n * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n * @see https://www.npmjs.com/package/json2typescript full documentation\n */\nvar ValueCheckingMode;\n(function (ValueCheckingMode) {\n    ValueCheckingMode[ValueCheckingMode[\"ALLOW_NULL\"] = 1] = \"ALLOW_NULL\";\n    ValueCheckingMode[ValueCheckingMode[\"ALLOW_OBJECT_NULL\"] = 2] = \"ALLOW_OBJECT_NULL\";\n    ValueCheckingMode[ValueCheckingMode[\"DISALLOW_NULL\"] = 3] = \"DISALLOW_NULL\";\n})(ValueCheckingMode = exports.ValueCheckingMode || (exports.ValueCheckingMode = {}));\n;\n//# sourceMappingURL=json-convert-enums.js.map\n\n//# sourceURL=webpack://RansomHeroes/./node_modules/json2typescript/src/json2typescript/json-convert-enums.js?");

/***/ }),

/***/ "./node_modules/json2typescript/src/json2typescript/json-convert-options.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/json2typescript/src/json2typescript/json-convert-options.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Internal constants.\n */\nvar Settings = /** @class */ (function () {\n    function Settings() {\n    }\n    Settings.MAPPING_PROPERTY = \"__jsonconvert__mapping__\";\n    Settings.MAPPER_PROPERTY = \"__jsonconvert__mapper__\";\n    Settings.CLASS_IDENTIFIER = \"__jsonconvert__class_identifier__\";\n    return Settings;\n}());\nexports.Settings = Settings;\n;\n/**\n * Internal mapping options for a property.\n */\nvar MappingOptions = /** @class */ (function () {\n    function MappingOptions() {\n        this.classPropertyName = \"\";\n        this.jsonPropertyName = \"\";\n        this.expectedJsonType = undefined;\n        this.isOptional = false;\n        this.customConverter = null;\n    }\n    return MappingOptions;\n}());\nexports.MappingOptions = MappingOptions;\n//# sourceMappingURL=json-convert-options.js.map\n\n//# sourceURL=webpack://RansomHeroes/./node_modules/json2typescript/src/json2typescript/json-convert-options.js?");

/***/ }),

/***/ "./node_modules/json2typescript/src/json2typescript/json-convert.js":
/*!**************************************************************************!*\
  !*** ./node_modules/json2typescript/src/json2typescript/json-convert.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_convert_enums_1 = __webpack_require__(/*! ./json-convert-enums */ \"./node_modules/json2typescript/src/json2typescript/json-convert-enums.js\");\nvar json_convert_options_1 = __webpack_require__(/*! ./json-convert-options */ \"./node_modules/json2typescript/src/json2typescript/json-convert-options.js\");\nvar any_1 = __webpack_require__(/*! ./any */ \"./node_modules/json2typescript/src/json2typescript/any.js\");\n/**\n * Offers a simple API for mapping JSON objects to TypeScript/JavaScript classes and vice versa.\n *\n * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n * @see https://www.npmjs.com/package/json2typescript full documentation on NPM\n */\nvar JsonConvert = /** @class */ (function () {\n    /////////////////\n    // CONSTRUCTOR //\n    /////////////////\n    /**\n     * Constructor.\n     *\n     * To learn more about the params, check the documentation of the equally named class properties.\n     *\n     * @param operationMode optional param (default: OperationMode.ENABLE)\n     * @param valueCheckingMode optional param (default: ValueCheckingMode.ALLOW_OBJECT_NULL)\n     * @param ignorePrimitiveChecks optional param (default: false)\n     */\n    function JsonConvert(operationMode, valueCheckingMode, ignorePrimitiveChecks) {\n        ////////////////\n        // PROPERTIES //\n        ////////////////\n        /**\n         * Determines how the JsonConvert class instance should operate.\n         *\n         * You may assign three different values:\n         * - OperationMode.DISABLE: json2typescript will be disabled, no type checking or mapping is done\n         * - OperationMode.ENABLE: json2typescript is enabled, but only errors are logged\n         * - OperationMode.LOGGING: json2typescript is enabled and detailed information is logged\n         */\n        this._operationMode = json_convert_enums_1.OperationMode.ENABLE;\n        /**\n         * Determines which types are allowed to be null.\n         *\n         * You may assign three different values:\n         * - ValueCheckingMode.ALLOW_NULL: all given values in the JSON are allowed to be null\n         * - ValueCheckingMode.ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n         * - ValueCheckingMode.DISALLOW_NULL: no null values are tolerated in the JSON\n         */\n        this._valueCheckingMode = json_convert_enums_1.ValueCheckingMode.ALLOW_OBJECT_NULL;\n        /**\n         * Determines whether primitive types should be checked.\n         * If true, it will be allowed to assign primitive to other primitive types.\n         */\n        this._ignorePrimitiveChecks = false;\n        if (operationMode && operationMode in json_convert_enums_1.OperationMode)\n            this.operationMode = operationMode;\n        if (valueCheckingMode && valueCheckingMode in json_convert_enums_1.ValueCheckingMode)\n            this.valueCheckingMode = valueCheckingMode;\n        if (ignorePrimitiveChecks)\n            this.ignorePrimitiveChecks = ignorePrimitiveChecks;\n    }\n    Object.defineProperty(JsonConvert.prototype, \"operationMode\", {\n        /**\n         * Determines how the JsonConvert class instance should operate.\n         *\n         * You may assign three different values:\n         * - OperationMode.DISABLE: json2typescript will be disabled, no type checking or mapping is done\n         * - OperationMode.ENABLE: json2typescript is enabled, but only errors are logged\n         * - OperationMode.LOGGING: json2typescript is enabled and detailed information is logged\n         * @returns {number}\n         */\n        get: function () {\n            return this._operationMode;\n        },\n        /**\n         * Determines how the JsonConvert class instance should operate.\n         *\n         * You may assign three different values:\n         * - OperationMode.DISABLE: json2typescript will be disabled, no type checking or mapping is done\n         * - OperationMode.ENABLE: json2typescript is enabled, but only errors are logged\n         * - OperationMode.LOGGING: json2typescript is enabled and detailed information is logged\n         * @param value\n         */\n        set: function (value) {\n            if (value in json_convert_enums_1.OperationMode)\n                this._operationMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsonConvert.prototype, \"valueCheckingMode\", {\n        /**\n         * Determines which types are allowed to be null.\n         *\n         * You may assign three different values:\n         * - ValueCheckingMode.ALLOW_NULL: all given values in the JSON are allowed to be null\n         * - ValueCheckingMode.ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n         * - ValueCheckingMode.DISALLOW_NULL: no null values are tolerated in the JSON\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._valueCheckingMode;\n        },\n        /**\n         * Determines which types are allowed to be null.\n         *\n         * You may assign three different values:\n         * - ValueCheckingMode.ALLOW_NULL: all given values in the JSON are allowed to be null\n         * - ValueCheckingMode.ALLOW_OBJECT_NULL: objects in the JSON are allowed to be null, primitive types are not allowed to be null\n         * - ValueCheckingMode.DISALLOW_NULL: no null values are tolerated in the JSON\n         *\n         * @param value\n         */\n        set: function (value) {\n            if (value in json_convert_enums_1.ValueCheckingMode)\n                this._valueCheckingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsonConvert.prototype, \"ignorePrimitiveChecks\", {\n        /**\n         * Determines whether primitive types should be checked.\n         * If true, it will be allowed to assign primitive to other primitive types.\n         *\n         * @returns {boolean}\n         */\n        get: function () {\n            return this._ignorePrimitiveChecks;\n        },\n        /**\n         * Determines whether primitive types should be checked.\n         * If true, it will be allowed to assign primitive to other primitive types.\n         *\n         * @param value\n         */\n        set: function (value) {\n            this._ignorePrimitiveChecks = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ////////////////////\n    // PUBLIC METHODS //\n    ////////////////////\n    /**\n     * Tries to serialize a TypeScript object or array of objects to JSON.\n     *\n     * @param data object or array of objects\n     *\n     * @returns {any} the JSON object\n     *\n     * @throws an exception in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.serialize = function (data) {\n        if (data === undefined) {\n            if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL) {\n                throw new Error(\"Fatal error in JsonConvert. \" +\n                    \"Passed parameter json in JsonConvert.serialize() is undefined. You have specified to disallow null values.\");\n            }\n            else {\n                return null;\n            }\n        }\n        else if (data === null) {\n            if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL) {\n                throw new Error(\"Fatal error in JsonConvert. \" +\n                    \"Passed parameter json in JsonConvert.serialize() is undefined. You have specified to disallow null values.\");\n            }\n            else {\n                return null;\n            }\n        }\n        else if (data) {\n            if (data.constructor === Array)\n                return this.serializeArray(data);\n            if (typeof data === \"object\")\n                return this.serializeObject(data); // must be last due to the fact that an array is an object in TypeScript!\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter json in JsonConvert.serialize() is not in valid format (object or array).\");\n        }\n    };\n    /**\n     * Tries to serialize a TypeScript object to a JSON object.\n     *\n     * @param instance TypeScript instance\n     *\n     * @returns {any} the JSON object\n     *\n     * @throws an exception in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.serializeObject = function (instance) {\n        if (typeof (instance) !== \"object\" || instance instanceof Array) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonArray in JsonConvert.serializeObject() is not of type object.\");\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return instance;\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JavaScript instance:\");\n            console.log(instance);\n        }\n        var jsonObject = {};\n        // Loop through all initialized class properties\n        for (var _i = 0, _a = Object.keys(instance); _i < _a.length; _i++) {\n            var propertyKey = _a[_i];\n            this.serializeObject_loopProperty(instance, propertyKey, jsonObject);\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning JSON object:\");\n            console.log(jsonObject);\n            console.log(\"----------\");\n        }\n        return jsonObject;\n    };\n    /**\n     * Tries to serialize a TypeScript array to a JSON array.\n     *\n     * @param instanceArray array of TypeScript instances\n     *\n     * @returns {any[]} the JSON array\n     *\n     * @throws an exception in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.serializeArray = function (instanceArray) {\n        if (typeof (instanceArray) !== \"object\" || instanceArray instanceof Array === false) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonArray in JsonConvert.serializeArray() is not of type array.\");\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return instanceArray;\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JavaScript array:\");\n            console.log(instanceArray);\n        }\n        var jsonArray = [];\n        // Loop through all array elements\n        for (var _i = 0, instanceArray_1 = instanceArray; _i < instanceArray_1.length; _i++) {\n            var classInstance = instanceArray_1[_i];\n            jsonArray.push(this.serializeObject(classInstance));\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning JSON array:\");\n            console.log(jsonArray);\n            console.log(\"----------\");\n        }\n        return jsonArray;\n    };\n    /**\n     * Tries to deserialize given JSON to a TypeScript object or array of objects.\n     *\n     * @param json the JSON as object or array\n     * @param classReference the class reference\n     *\n     * @returns {any} the deserialized data (TypeScript instance or array of TypeScript instances)\n     *\n     * @throws an exception in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.deserialize = function (json, classReference) {\n        if (json === undefined) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter json in JsonConvert.deserialize() is undefined. This is not a valid JSON format.\");\n        }\n        else if (json === null) {\n            if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL) {\n                throw new Error(\"Fatal error in JsonConvert. \" +\n                    \"Passed parameter json in JsonConvert.deserialize() is undefined. You have specified to disallow null values.\");\n            }\n            else {\n                return null;\n            }\n        }\n        else if (json) {\n            if (json.constructor === Array)\n                return this.deserializeArray(json, classReference);\n            if (typeof json === \"object\")\n                return this.deserializeObject(json, classReference); // must be last due to the fact that an array is an object in TypeScript!\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter json in JsonConvert.deserialize() is not in valid JSON format (object or array).\");\n        }\n    };\n    ;\n    /**\n     * Tries to deserialize a JSON object to a TypeScript object.\n     *\n     * @param jsonObject the JSON object\n     * @param classReference the class reference\n     *\n     * @returns {any} the deserialized TypeScript instance\n     *\n     * @throws an exception in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.deserializeObject = function (jsonObject, classReference) {\n        if (typeof (jsonObject) !== \"object\" || jsonObject instanceof Array) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonObject in JsonConvert.deserializeObject() is not of type object.\");\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return jsonObject;\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JSON object:\");\n            console.log(jsonObject);\n        }\n        var instance = new classReference();\n        // Loop through all initialized class properties\n        for (var _i = 0, _a = Object.keys(instance); _i < _a.length; _i++) {\n            var propertyKey = _a[_i];\n            this.deserializeObject_loopProperty(instance, propertyKey, jsonObject);\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning CLASS instance:\");\n            console.log(instance);\n            console.log(\"----------\");\n        }\n        return instance;\n    };\n    /**\n     * Tries to deserialize a JSON array to a TypeScript array.\n     *\n     * @param jsonArray the JSON array\n     * @param classReference the object class\n     *\n     * @returns {any[]} the deserialized array of TypeScript instances\n     *\n     * @throws an exception in case of failure\n     *\n     * @author Andreas Aeschlimann, DHlab, University of Basel, Switzerland\n     * @see https://www.npmjs.com/package/json2typescript full documentation\n     */\n    JsonConvert.prototype.deserializeArray = function (jsonArray, classReference) {\n        if (typeof (jsonArray) !== \"object\" || jsonArray instanceof Array === false) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Passed parameter jsonArray in JsonConvert.deserializeArray() is not of type array.\");\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.DISABLE) {\n            return jsonArray;\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"----------\");\n            console.log(\"Receiving JSON array:\");\n            console.log(jsonArray);\n        }\n        var array = [];\n        // Loop through all array elements\n        for (var _i = 0, jsonArray_1 = jsonArray; _i < jsonArray_1.length; _i++) {\n            var jsonObject = jsonArray_1[_i];\n            array.push(this.deserializeObject(jsonObject, classReference));\n        }\n        if (this.operationMode === json_convert_enums_1.OperationMode.LOGGING) {\n            console.log(\"Returning array of CLASS instances:\");\n            console.log(array);\n            console.log(\"----------\");\n        }\n        return array;\n    };\n    /////////////////////\n    // PRIVATE METHODS //\n    /////////////////////\n    /**\n     * Tries to find the JSON mapping for a given class property and finally assign the value.\n     *\n     * @param instance the instance of the class\n     * @param classPropertyName the property name\n     * @param json the JSON object\n     *\n     * @throws throws an expection in case of failure\n     */\n    JsonConvert.prototype.serializeObject_loopProperty = function (instance, classPropertyName, json) {\n        // Check if a JSON-object mapping is possible for a property\n        var mappingOptions = this.getClassPropertyMappingOptions(instance, classPropertyName);\n        if (mappingOptions === null) {\n            return;\n        }\n        // Get expected and real values\n        var jsonKey = mappingOptions.jsonPropertyName;\n        var expectedJsonType = mappingOptions.expectedJsonType;\n        var isOptional = mappingOptions.isOptional;\n        var customConverter = mappingOptions.customConverter;\n        var classInstancePropertyValue = instance[classPropertyName];\n        // Check if the json value exists\n        if (typeof (classInstancePropertyValue) === \"undefined\") {\n            if (isOptional)\n                return;\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JavaScript instance of class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" to JSON because the defined class property \\\"\" + classPropertyName + \"\\\" does not exist or is not defined:\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonKey + \"\\n\\n\");\n        }\n        // Map the property\n        try {\n            json[jsonKey] = customConverter !== null ? customConverter.serialize(classInstancePropertyValue) : this.verifyProperty(expectedJsonType, classInstancePropertyValue, true);\n        }\n        catch (e) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JavaScript instance of class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" to JSON because of a type error.\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tClass property value: \\n\\t\\t\" + classInstancePropertyValue + \"\\n\\n\" +\n                \"\\tExpected type: \\n\\t\\t\" + this.getExpectedType(expectedJsonType) + \"\\n\\n\" +\n                \"\\tRuntime type: \\n\\t\\t\" + this.getTrueType(classInstancePropertyValue) + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonKey + \"\\n\\n\" +\n                e.message + \"\\n\");\n        }\n    };\n    /**\n     * Tries to find the JSON mapping for a given class property and finally assign the value.\n     *\n     * @param instance the instance of the class\n     * @param classPropertyName the property name\n     * @param json the JSON object\n     *\n     * @throws throws an expection in case of failure\n     */\n    JsonConvert.prototype.deserializeObject_loopProperty = function (instance, classPropertyName, json) {\n        var mappingOptions = this.getClassPropertyMappingOptions(instance, classPropertyName);\n        if (mappingOptions === null) {\n            return;\n        }\n        // Get expected and real values\n        var jsonKey = mappingOptions.jsonPropertyName;\n        var expectedJsonType = mappingOptions.expectedJsonType;\n        var isOptional = mappingOptions.isOptional;\n        var customConverter = mappingOptions.customConverter;\n        var jsonValue = json[jsonKey];\n        // Check if the json value exists\n        if (typeof (jsonValue) === \"undefined\") {\n            if (isOptional)\n                return;\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JSON object to the class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" because the defined JSON property \\\"\" + jsonKey + \"\\\" does not exist:\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonKey + \"\\n\\n\");\n        }\n        // Map the property\n        try {\n            instance[classPropertyName] = customConverter !== null ? customConverter.deserialize(jsonValue) : this.verifyProperty(expectedJsonType, jsonValue);\n        }\n        catch (e) {\n            throw new Error(\"Fatal error in JsonConvert. \" +\n                \"Failed to map the JSON object to the JavaScript class \\\"\" + instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \"\\\" because of a type error.\\n\\n\" +\n                \"\\tClass property: \\n\\t\\t\" + classPropertyName + \"\\n\\n\" +\n                \"\\tExpected type: \\n\\t\\t\" + this.getExpectedType(expectedJsonType) + \"\\n\\n\" +\n                \"\\tJSON property: \\n\\t\\t\" + jsonKey + \"\\n\\n\" +\n                \"\\tJSON type: \\n\\t\\t\" + this.getJsonType(jsonValue) + \"\\n\\n\" +\n                \"\\tJSON value: \\n\\t\\t\" + JSON.stringify(jsonValue) + \"\\n\\n\" +\n                e.message + \"\\n\\n\");\n        }\n    };\n    ////////////////////\n    // HELPER METHODS //\n    ////////////////////\n    /**\n     * Gets the mapping options of a given class property.\n     *\n     * @param instance any class instance\n     * @param {string} propertyName any property name\n     *\n     * @returns {MappingOptions|null}\n     */\n    JsonConvert.prototype.getClassPropertyMappingOptions = function (instance, propertyName) {\n        var mappings = instance[json_convert_options_1.Settings.MAPPING_PROPERTY];\n        // Check if mapping is defined\n        if (typeof (mappings) === \"undefined\")\n            return null;\n        // Get direct mapping if possible\n        var directMappingName = instance[json_convert_options_1.Settings.CLASS_IDENTIFIER] + \".\" + propertyName;\n        if (typeof (mappings[directMappingName]) !== \"undefined\") {\n            return mappings[directMappingName];\n        }\n        // No mapping was found, try to find some\n        var indirectMappingNames = Object.keys(mappings).filter(function (key) { return key.match(\"\\\\.\" + propertyName + \"$\"); }); // use endsWidth in later versions\n        if (indirectMappingNames.length > 0) {\n            return mappings[indirectMappingNames[0]];\n        }\n        return null;\n    };\n    /**\n     * Compares the type of a given value with an internal expected json type.\n     * Either returns the resulting value or throws an exception.\n     *\n     * @param expectedJsonType the expected json type for the property\n     * @param value the property value to verify\n     * @param serialize optional param (default: false), if given, we are in serialization mode\n     *\n     * @returns returns the resulted mapped property\n     *\n     * @throws throws an expection in case of failure\n     */\n    JsonConvert.prototype.verifyProperty = function (expectedJsonType, value, serialize) {\n        // Map immediately if we don't care about the type\n        if (expectedJsonType === any_1.Any || expectedJsonType === null || expectedJsonType === Object) {\n            return value;\n        }\n        // Check if attempt and expected was 1-d\n        if (expectedJsonType instanceof Array === false && value instanceof Array === false) {\n            // Check the type\n            if (typeof (expectedJsonType) !== \"undefined\" && expectedJsonType.prototype.hasOwnProperty(json_convert_options_1.Settings.CLASS_IDENTIFIER)) {\n                // Check if we have null value\n                if (value === null) {\n                    if (this.valueCheckingMode !== json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL)\n                        return null;\n                    else\n                        throw new Error(\"\\tReason: Given value is null.\");\n                }\n                if (serialize)\n                    return this.serializeObject(value);\n                else\n                    return this.deserializeObject(value, expectedJsonType);\n            }\n            else if (expectedJsonType === any_1.Any || expectedJsonType === null || expectedJsonType === Object) {\n                // Check if we have null value\n                if (value === null) {\n                    if (this.valueCheckingMode !== json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL)\n                        return null;\n                    else\n                        throw new Error(\"\\tReason: Given value is null.\");\n                }\n                return value;\n            }\n            else if (expectedJsonType === String || expectedJsonType === Number || expectedJsonType === Boolean) {\n                // Check if we have null value\n                if (value === null) {\n                    if (this.valueCheckingMode === json_convert_enums_1.ValueCheckingMode.ALLOW_NULL)\n                        return null;\n                    else\n                        throw new Error(\"\\tReason: Given value is null.\");\n                }\n                // Check if the types match\n                if ((expectedJsonType === String && typeof (value) === \"string\") ||\n                    (expectedJsonType === Number && typeof (value) === \"number\") ||\n                    (expectedJsonType === Boolean && typeof (value) === \"boolean\")) {\n                    return value;\n                }\n                else {\n                    if (this.ignorePrimitiveChecks)\n                        return value;\n                    throw new Error(\"\\tReason: Given object does not match the expected primitive type.\");\n                }\n            }\n            else {\n                throw new Error(\"\\tReason: Expected type is unknown. There might be multiple reasons for this:\\n\" +\n                    \"\\t- You are missing the decorator @JsonObject (for object mapping)\\n\" +\n                    \"\\t- You are missing the decorator @JsonConverter (for custom mapping) before your class definition\\n\" +\n                    \"\\t- Your given class is undefined in the decorator because of circular dependencies\");\n            }\n        }\n        // Check if attempt and expected was n-d\n        if (expectedJsonType instanceof Array && value instanceof Array) {\n            var array = [];\n            // No data given, so return empty value\n            if (value.length === 0) {\n                return array;\n            }\n            // We obviously don't care about the type, so return the value as is\n            if (expectedJsonType.length === 0) {\n                return value;\n            }\n            // Loop through the data. Both type and value are at least of length 1\n            var autofillType = expectedJsonType.length < value.length;\n            for (var i = 0; i < value.length; i++) {\n                if (autofillType && i >= expectedJsonType.length)\n                    expectedJsonType[i] = expectedJsonType[i - 1];\n                array[i] = this.verifyProperty(expectedJsonType[i], value[i], serialize);\n            }\n            return array;\n        }\n        // Check if attempt was 1-d and expected was n-d\n        if (expectedJsonType instanceof Array && value instanceof Object) {\n            var array = [];\n            // No data given, so return empty value\n            if (value.length === 0) {\n                return array;\n            }\n            // We obviously don't care about the type, so return the json value as is\n            if (expectedJsonType.length === 0) {\n                return value;\n            }\n            // Loop through the data. Both type and value are at least of length 1\n            var autofillType = expectedJsonType.length < Object.keys(value).length;\n            var i = 0;\n            for (var key in value) {\n                if (autofillType && i >= expectedJsonType.length)\n                    expectedJsonType[i] = expectedJsonType[i - 1];\n                array[key] = this.verifyProperty(expectedJsonType[i], value[key]);\n                i++;\n            }\n            return array;\n        }\n        // Check if attempt was 1-d and expected was n-d\n        if (expectedJsonType instanceof Array) {\n            if (value === null) {\n                if (this.valueCheckingMode !== json_convert_enums_1.ValueCheckingMode.DISALLOW_NULL)\n                    return null;\n                else\n                    throw new Error(\"\\tReason: Given value is null.\");\n            }\n            throw new Error(\"\\tReason: Expected type is array, but given value is non-array.\");\n        }\n        // Check if attempt was n-d and expected as 1-d\n        if (value instanceof Array) {\n            throw new Error(\"\\tReason: Given value is array, but expected a non-array type.\");\n        }\n        // All other attempts are fatal\n        throw new Error(\"\\tReason: Mapping failed because of an unknown error.\");\n    };\n    ///////////////////////////\n    // JSON2TYPESCRIPT TYPES //\n    ///////////////////////////\n    /**\n     * Returns a string representation of the expected json type.\n     *\n     * @param expectedJsonType the expected type given from the decorator\n     *\n     * @returns {string} the string representation\n     */\n    JsonConvert.prototype.getExpectedType = function (expectedJsonType) {\n        var type = \"\";\n        if (expectedJsonType instanceof Array) {\n            type = \"[\";\n            for (var i = 0; i < expectedJsonType.length; i++) {\n                if (i > 0)\n                    type += \",\";\n                type += this.getExpectedType(expectedJsonType[i]);\n            }\n            type += \"]\";\n            return type;\n        }\n        else {\n            if (expectedJsonType === any_1.Any || expectedJsonType === null || expectedJsonType === Object) {\n                return \"any\";\n            }\n            else if (expectedJsonType === String || expectedJsonType === Boolean || expectedJsonType === Number) {\n                return (new expectedJsonType()).constructor.name.toLowerCase();\n            }\n            else if (typeof expectedJsonType === 'function') {\n                return (new expectedJsonType()).constructor.name;\n            }\n            else if (expectedJsonType === undefined) {\n                return \"undefined\";\n            }\n            else {\n                return \"?????\";\n            }\n        }\n    };\n    /**\n     * Returns a string representation of the JSON value type.\n     *\n     * @param jsonValue the JSON value\n     *\n     * @returns {string} the string representation\n     */\n    JsonConvert.prototype.getJsonType = function (jsonValue) {\n        if (jsonValue === null)\n            return \"null\";\n        var type = \"\";\n        if (jsonValue instanceof Array) {\n            type = \"[\";\n            for (var i = 0; i < jsonValue.length; i++) {\n                if (i > 0)\n                    type += \",\";\n                type += this.getJsonType(jsonValue[i]);\n            }\n            type += \"]\";\n            return type;\n        }\n        else {\n            return typeof (jsonValue);\n        }\n    };\n    /**\n     * Returns a string representation of the true TypeScript type.\n     *\n     * @param trueValue the true value\n     *\n     * @returns {string} the string representation\n     */\n    JsonConvert.prototype.getTrueType = function (trueValue) {\n        return typeof (trueValue);\n    };\n    return JsonConvert;\n}());\nexports.JsonConvert = JsonConvert;\n//# sourceMappingURL=json-convert.js.map\n\n//# sourceURL=webpack://RansomHeroes/./node_modules/json2typescript/src/json2typescript/json-convert.js?");

/***/ })

/******/ });
});